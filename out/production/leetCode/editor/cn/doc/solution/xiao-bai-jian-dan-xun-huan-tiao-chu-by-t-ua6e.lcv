> Problem[26. 删除有序数组中的重复项](/problems/remove-duplicates-from-sorted-array/)

[TOC]

# 思路

> 取元素i，与元素j遍历比较，相同则删除。配合跳出循环、相同下标重新循环、循环结束判断。

# 解题要点

> 1. 元素i循环0至len-1，元素j循环i+1至len，定[i]与循环[j]相比较。
> 2. [i]、[j]相同则删除，len--，跳出此次for循环，通过while进入下次相同[i]数值的[j]循环。
> 3. 通过flag记录此[i]值是否与[j]的比较结束（不再有可以删除的重复[i]值），结束后跳出while进入下一个[i]值。

---

> 与题27同是 **while、for、if、break 的配合**

# 语法

- vector 操作:

> nums.erase(nums.begin() + j);

# Code

* []

```C++
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int len = nums.size();
        int j;
        int flag;
        for (int i = 0; i < len - 1; i++) {
            j = i + 1;
            while (nums[i] <= nums[j]) {
                flag = 0;
                for ( ; j < len; j++) {
                    if (nums[i] == nums[j]) {
                        nums.erase(nums.begin() + j);
                        len--;
                        flag = 1;
                        break;
                    }
                }
                if (flag == 0) {
                    break;
                }
            }
        }
        return len;
    }
    vector<int> nums;
};
```

